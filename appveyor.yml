# master
-
  #---------------------------------#
  #      general configuration      #
  #---------------------------------#

  # branches to build
  branches:
    only:
      - master

  skip_tags: true

  # skip commits with particular message or from user
  skip_commits:
    message: /README.md edited online with Bitbucket/

  # version format
  version: 1.0.0

  environment:
    nodejs_version: "Stable"

  install:
    - ps: Install-Product node $env:nodejs_version
    - npm install -g npm
    - ps: $env:path = $env:appdata + "\npm;" + $env:path
    - npm install

      # mongodb
    - ps: >-
          if (!(Test-Path -path "C:\downloads\mongodb.zip"))
          {
            Write-Host "Downloading and extracting MongoDB..."
            Invoke-WebRequest $env:MongoDb_DownloadUri -OutFile C:\downloads\mongodb.zip
          }
          else
          {
            Write-Host "Using cached MongoDB download..."
          }

    - ps: Write-Host "Installing and starting MongoDB..."
    - ps: New-Item -ItemType Directory -Force -Path C:\mongo\data
    - ps: 7z e C:\downloads\mongodb.zip -oC:\mongo -aoa
    - ps: Start-Process -NoNewWindow C:\mongo\mongod.exe -ArgumentList '--dbpath=C:\mongo\data','--logpath=C:\mongo\log','--smallfiles'


  test_script:
    - cmd: npm run test

  matrix:
    fast_finish: true

  clone_depth: 10

  deploy:
    - provider: Environment
      name: Azure Test Reporting API

  init:
    - git config --global core.autocrlf true

  cache:
    - node_modules -> **\package.json

  on_failure:
    - ps: Update-AppveyorBuild -Version "$($env:appveyor_build_version)-$(Get-Date -format HHmmss)-failed"

  on_success:
    - ps: git config --global user.email "$($env:Git_Email)"
    - ps: git config --global user.name "$($env:Git_Username)"
    - ps: git config --global credential.helper store
    - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:Git_Username):$($env:Git_Password)@bitbucket.org`n"
    - ps: echo $($env:APPVEYOR_REPO_NAME)
    - ps: git remote add bitbucket https://$($env:Git_Username)@bitbucket.org/$($env:APPVEYOR_REPO_NAME).git
    - ps: git tag $($env:appveyor_build_version) $($env:APPVEYOR_REPO_COMMIT)
    - ps: git push bitbucket --tags --quiet

# everything except master
-
  #---------------------------------#
  #      general configuration      #
  #---------------------------------#

  # branches to build
  branches:
    except:
      - master                      # build master

  skip_tags: true

  # skip commits with particular message or from user
  skip_commits:
    message: /README.md edited online with Bitbucket/

  # version format
  version: 1.0.0.{build}-{branch}

  environment:
    nodejs_version: "Stable"

  install:
    - ps: Install-Product node $env:nodejs_version
    - npm install -g npm
    - ps: $env:path = $env:appdata + "\npm;" + $env:path
    - npm install

      # mongodb
    - ps: >-
          if (!(Test-Path -path "C:\downloads\mongodb.zip"))
          {
            Write-Host "Downloading and extracting MongoDB..."
            Invoke-WebRequest $env:MongoDb_DownloadUri -OutFile C:\downloads\mongodb.zip
          }
          else
          {
            Write-Host "Using cached MongoDB download..."
          }

    - ps: Write-Host "Installing and starting MongoDB..."
    - ps: New-Item -ItemType Directory -Force -Path C:\mongo\data
    - ps: 7z e C:\downloads\mongodb.zip -oC:\mongo -aoa
    - ps: Start-Process -NoNewWindow C:\mongo\mongod.exe -ArgumentList '--dbpath=C:\mongo\data','--logpath=C:\mongo\log','--smallfiles'


  test_script:
    - cmd: npm run test

  matrix:
    fast_finish: true

  clone_depth: 10

  deploy:
    - provider: Environment
      name: Azure Test Reporting API

  init:
    - git config --global core.autocrlf true

  cache:
    - node_modules -> **\package.json

  on_failure:
    - ps: Update-AppveyorBuild -Version "$($env:appveyor_build_version)-$(Get-Date -format HHmmss)-failed"